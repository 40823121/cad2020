var tipuesearch = {"pages": [{'title': '40823121', 'text': '\n', 'tags': '', 'url': '40823121.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發，可以在一個目錄中放入cmsimde，然後將up_dir中的內容放到與cmsimde目錄同位階的地方，使用命令進入cmsimde目錄，執行python wsgi.py ，就可以啟動，以瀏覽器https：// localhost：9443就可以連接，以admin作為管理者密碼，就可以登錄維護內容。 \n cmsimde的開發採用Leo編輯器，打開cmsimde目錄中的cmsimde.leo就可以進行程序修改，結束後，以保留網際內容，只要將cmsimde外部的內容倒回up_dir目錄中即可連續對cmsimde遠程倉儲進行改版。 \n init.py位於up_dir目錄中，可以設置site_title與uwsgi等變數。 \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Midterm', 'text': '', 'tags': '', 'url': 'Midterm.html'}, {'title': 'w1', 'text': '\n', 'tags': '', 'url': 'w1.html'}, {'title': 'w2〜w4', 'text': '\n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w2〜w4.html'}, {'title': 'W5', 'text': '什麼是API？ \n API是 應用程式介面\xa0\xa0 \n 可以幫助開發者節省成本，並很快達到目標。舉個例子，假日出去玩總是玩到很累，肚子餓，讓人很想去飲料販賣機買麵包來吃。販賣機，接下來你會這樣做： \n \n 你想吃麵包 \n 你按了販賣機上的麵包按鈕 \n 你從取物口拿出麵包\xa0 \n \n API的概念-剛剛示例中的麵包就是“你想獲得的資料”。而販賣機上的按鈕就是API，按去販賣機就收到了你的需求，就會麵包從取物口送出，你也就得到了你想要的資料了。 \n \n', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '如何使用API控制Solidworks與Inevntor佈局模型，並同時將各模型之體積與圖片匯入.html檔，轉換為能在網頁中瀏覽各模型之變化 \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '', 'tags': '', 'url': 'W7.html'}, {'title': '工程師', 'text': '1.creat創造性具有 工程職業人員 需擁有條件 \xa0總部辦公樓設計分析構建\xa0 禦姐經過 反覆測試 2.精巧聰明禦姐正確的配置 數學英文很重要（用於工程師之間溝通） 數學數學分析能力的科學原理科學原理分析能力 \n', 'tags': '', 'url': '工程師.html'}, {'title': 'scedit編輯器', 'text': '\n 下載cad2020_w7_tcc_gnuplot.7z解壓縮到隨身碟資料夾裡 \n \n 將start.bat丟入小白框修改（添加）框內之路徑 \n \n 使用下載的cad2020_w7_tcc_gnuplot.7z裡的wscite資料夾將cpp.properties添加檔案複製出 \n \n \n 將下載的cpp.properties覆蓋到cad2020資料夾內部初始化的cpp.properties合併檔 \n \n \n 即可執行以下程式 \n \n \n \n \n \n', 'tags': '', 'url': 'scedit編輯器.html'}, {'title': 'w8', 'text': '下載\xa0 Pyslvs_UI \n Pyslvs使用手冊 \n Pyslvs連桿機構運用 \n \n \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '期中考週 \n \n', 'tags': '', 'url': 'w9.html'}, {'title': 'Final', 'text': '\n', 'tags': '', 'url': 'Final.html'}, {'title': 'w10', 'text': '下載 coppeliasim  ，以組為單位設計出一組機構，認為發明者重新完成機構圖，再放到coppeliasim進行模擬 \n \n vcruntime140_1.zip解壓縮完丟進 CoppeliaSimEdu_4.1.0_rev \n \n \n 小組討論 \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11', 'text': '討論要設計的機構，並彙入coppeliasim測試及修改。 \n (階梯上升機構，階梯框架) \n \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '\n Coppeliasim使用者說明，以及放置程式內模擬。 \n 1.利用SolidWorks，Inventor等各個3D繪圖軟件佈局機構圖，將檔案存成STL檔並彙入Coppeliasim中，所有檔案以英文檔名。 \n 2.引入機構時以coppeliasim中的加入為基準，Z避免上調匯入時還需要調高基準。 \n 3.使用“編輯”->“分組/合併”->“劃分選定的形狀”。 \n 4.使用Add-> joint-> Revolute讓物件做旋轉。 \n 5.必須開啟動態屬性變量中的選項才能使物件做旋轉或移動或讓物件之間作接觸。 \n \n \n', 'tags': '', 'url': 'w12.html'}, {'title': 'w13', 'text': '持續討論機構 \n \n \n \xa0 \n \n \n 球棒 \n', 'tags': '', 'url': 'w13.html'}, {'title': 'w14', 'text': '學習coppeliasim基本用法，匯入檔案，相鄰控制，位置移動，軸關節的放置與使用 \n 討論小組報告及修改問題 \n \n', 'tags': '', 'url': 'w14.html'}, {'title': 'w15', 'text': '各組參加討論機構 \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w16', 'text': '到課自評並抽查同學網頁，各組持續討論製作並分工。 \n \n', 'tags': '', 'url': 'w16.html'}, {'title': 'W17', 'text': '\n \n \n', 'tags': '', 'url': 'W17.html'}, {'title': 'W18', 'text': '期末心得 \n \n \xa0 \xa0 期初先用inventor畫了3d圖，雖然沒畫過3d但感謝組員們的指導，讓我學會了基本的運 \n 用並畫出老師給的作業。 \n coppeliasim 組長在 meeting 時有教如何使用，但裡面有許多不懂的單字，在剛接觸時需 \n 先對不懂的單字進行翻譯，才能更清楚的運用 。而這反應了英文的重要。\xa0 \n \n 必須針對自己不足的地方進行加強\xa0', 'tags': '', 'url': 'W18.html'}, {'title': 'CoppeliaSim', 'text': '', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'Simulation Setting', 'text': '\n', 'tags': '', 'url': 'Simulation Setting.html'}, {'title': 'Scene Object Properties', 'text': '\n \n \n \n', 'tags': '', 'url': 'Scene Object Properties.html'}, {'title': 'Compile Solvespace 快捷鍵', 'text': '\n CTRL+O： 打開一個場景 \n CTRL+N：打開一個新場景 \n CTRL+S：保存場景 \n CTRL+W： 關閉場景 \n CTRL+Q： 退出應用程式 \n CTRL+<space>： 開始/停止模擬 \n CTRL+E：按E一下/二下/三下，分別為調整場景/調整物體方向/調整物體角度 \n CTRL+D： 打開對象屬性對話框 \n CTRL+G： 打開計算模塊對話框 \n \n \n', 'tags': '', 'url': 'Compile Solvespace 快捷鍵.html'}, {'title': 'Meeting', 'text': '\n \n \n \n \n \n', 'tags': '', 'url': 'Meeting.html'}]};